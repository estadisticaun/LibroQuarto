# Agregar partes a una tabla simple {#sec-partes}

Con la librería *gt* podemos personalizar la tabla como deseemos. A continuación podemos apreciar un ejemplo de la estructura de una tabla creada con *gt*

![Partes de una gt Table](Imagenes/Gt table/2. Partes_tabla.png){fig-alt="Partes de una gt Table" fig-align="center" width="80%"}

Las partes son:

* ***Table header***, el encabezado de la tabla, que puede tener título y/o subtítulo.
* ***Stub* y *Stub Head***, donde se agregan los títulos de las filas de la tabla.
* ***Column labels*** con los nombres de las columnas
* ***Table body*** donde están las filas y las columnas "originales".
* ***Table footer***, que puede tener las notas de pie de página y algunas referencias.

Para incluir cada una de estas partes se utiliza la familia de las funciones `tab_*()`.

## Título y subtítulo (*Table header*)

Para agregar un encabezado a nuestra tabla usamos la función `tab_header()` y así podemos incluir títulos y subtítulos de ser necesario.

Antes nuestra tabla se veía así

``` {r}
#| echo: false
#| warning: false
#| label: fig-basica
#| fig-cap: "Tabla básica de `islands`"

suppressMessages(library(gt))
suppressMessages(library(dplyr))

islands_tbl <- 
  tibble(
    name = names(islands),
    size = islands
  ) |>
  arrange(desc(size)) |>
  slice(1:10)

names(islands_tbl)<-c("Nombre","Tamaño")

(gt_tbl <- gt(islands_tbl))
```

Agregamos un título y un subtítulo, y @fig-basica se visualiza así

``` {r}
gt_tbl1 <- 
  gt_tbl |>
  tab_header(
    title = "Grandes masas de tierra del mundo",
    subtitle = "Top 10 de las más grandes"
  )

# Visualizamos la tabla
gt_tbl1
```

También podemos usar herramientas de MarkDown utilizando la función `md()`.... TOCA REVISARLO PORQUE NO ME FUNCIONA EL MD


## Referencias y notas al pie de página (*Table footer*)

Ahora le vamos a incluir referencias y algunas notas en ciertas columnas, para eso usaremos la función `tab_source_note`

``` {r}
gt_tbl2 <- 
  gt_tbl1 |>
  tab_source_note(
    source_note = "Recurso: The World Almanac and Book of Facts, 1975, página 406."
  ) |>
  tab_source_note(
    source_note = "Referencia: McNeil, D. R. (1977) Interactive Data Analysis. Wiley."
  )

# Visualizamos la tabla
gt_tbl2
```

Ahora agregamos una nota al pie de página con la función `tab_footnote()`, también es necesario usar la función `cells_body`para especificar el lugar en el que irá el pequeño número que dirige al lector de la tabla a la nota al pie de página.

Hay varias formas de especificar los argumentos `rows` y `columns` de `cells_body()`, estas son:

* Un vector de nombres de columnas o nombres de filas
* Un vector con índices de columnas o de filas
* Usando la función de selección `c()`
* Usando una de las funciones `starts_with()`, `ends_with()`, `contains()`, `matches()`, `one_of()`, y `everything()`.

En nuestro ejemplo, en las filas donde *"name"* es *"North America"* y *"South America"* pondremos una nota al pie de página que diga *"América"*. Para eso, especificamos que el número se debe ubicar en la columna *"name"* (`columns=name`) en las filas $3$ y $4$ (`rows=3:4`).

```{r}
gt_tbl3 <- 
  gt_tbl2 |>
  tab_footnote(
    footnote = "América.",
    locations = cells_body(columns = Nombre, rows = 3:4)
  )

# Visualizamos la tabla
gt_tbl3
```

También es posible filtrar las filas o columnas usando los operadores usuales "$==$","$>$" y "$<$". En nuestro ejemplo, agreguemos la nota al pie de página para aquellas filas donde *size* es mayor a $6000$ y menor a $16000$, así

```{r}
gt_tbl4 <- 
  gt_tbl2 |>
  tab_footnote(
    footnote = "El tamaño es mayor que 6000 y menor que 16000",
    locations = cells_body(columns = Nombre, rows = Tamaño>6000 & Tamaño<16000)
  )

# Visualizamos la tabla
gt_tbl4
```

Por defecto, se pone un número pequeño para hacer referencia al pie de página, sin embargo, podemos modificarlo usando `opt_footnote_marks()`

```{r}
gt_tbl4 <- 
  gt_tbl2 |>
  tab_footnote(
    footnote = "El tamaño es mayor que 6000 y menor que 16000",
    locations = cells_body(columns = Nombre, rows = Tamaño>6000 & Tamaño<16000)
  ) |>
opt_footnote_marks(marks = c("*", "+"))

# Visualizamos la tabla
gt_tbl4
```

Finalmente, cabe mencionar que es posible agregar cuantas referencias y notas al pie de página se desee. Las otras funciones `cells_*()` permiten agregar la nota al pie de página en otras partes de la tabla como títulos, subtítulos, stubs, entre otras. Puede encontrar información más detallada de las funciones `cells_*()` del paquete *gt*  [aquí](https://search.r-project.org/CRAN/refmans/gt/html/cells_body.html#:~:text=The%20cells_body()%20function%20is,targeted%20cells%20with%20text_transform()%20.)

## Grupos de filas (*Stub*)

Un ***Stub*** es la parte izquierda de la fila donde se encuentran los nombres de las filas o los nombres de los grupos de filas. El término ***Stub Head*** hace referencia al "título" de los *stubs* de la tabla. 

En la librería *gt* es necesario especificar cuál es la columna que tiene los *"nombres"* de las filas. En nuestro ejemplo, el tibble *islands_tbl* tiene DOS columnas, debemos especificar que la columna ***Nombre*** tiene los nombres de las filas y a partir de ella formaremos los *stubs*, y que la columna ***size*** es la única columna, esto lo hacemos con la función `gt()` y el argumento `rowname_col` así

```{r}
gt_tbl5 <- 
  islands_tbl |>
  gt(rowname_col = "Nombre")

gt_tbl5
```

Ahor sí podemos formar los grupos de filas y asignar los *stubs*. Iniciamos con el *stub head* al que llamaremos "Masa terrestre" con la función `tab_stubhead()` así

``` {r}
gt_tbl6 <- 
  gt_tbl5 |>
  tab_stubhead(label = "Masa terrestre")

gt_tbl6
```

A continuación, agrupamos las filas y asignamos el correspondiente *stub* con la función `tab_row_group()`

``` {r}
gt_tbl7 <- 
  gt_tbl6 |> 
  tab_row_group(
    label = "Continente",
    rows = 1:6
  ) |>
  tab_row_group(
    label = "País",
    rows = c("Australia", "Greenland")
  ) |>
  tab_row_group(
    label = "Subregión",
    rows = c("New Guinea", "Borneo")
  )

# Visualizamos la tabla
gt_tbl7
```

Ahora agregamos los otros elementos de la tabla y nos queda 

``` {r}
gt_tbl8 <- 
  gt_tbl7 |> 
  tab_header(
    title = "Grandes masas de tierra del mundo",
    subtitle = "Top 10 de las más grandes"
  ) |>
  tab_source_note(
    source_note = "Recurso: The World Almanac and Book of Facts, 1975, página 406."
  ) |>
  tab_source_note(
    source_note = "Referencia: McNeil, D. R. (1977) Interactive Data Analysis. Wiley."
  ) |>
  tab_footnote(
    footnote = "El tamaño es mayor que 6000 y menor que 16000",
    locations = cells_body(columns = Tamaño, rows = Tamaño>6000 & Tamaño<16000)
  ) |>
opt_footnote_marks(marks = c("*", "+"))

# Visualizamos la tabla
gt_tbl8
```

Otra forma, tal vez un poco más sencilla, para generar los *stubs* es cuando en la base de datos original existe una columna con los nombres de los grupos de las filas, en el ejemplo, que en *islands_tbl* existiera la columna ***nombre_grupos*** donde aparecen *Subregión*, *Continente* y *País*, de modo que no sería necesario usar la función `tab_row_group()` para formar cada grupo, sino que simplemente usaríamos el siguiente fragmento del código: "`gt(islands_tbl, rowname_col = "name", groupname_col = "nombre_grupos") |> ...`".

## Grupos de columnas (*Spanner*)

Así como en la sección anterior hicimos grupos de filas y les pusimos nombres a dichos gurpos, también es posible crear grupos de filas y asignarles títulos utilizando la función `tab_spanner()`, dichos grupos se conocen como ***Spanner***.

Para mostrar un ejemplo, usaremos los datos disponibles en `airquality` , esta base de datos tiene registro del día, mes y las mediciones de la calidad del aire en Nueva York de 153 días entre Mayo a Septiembre de 1973, tiene variables como ozono, radiación solar, temperatura, entre otras. Para ilustrar el uso de la función `tab_stanner()`, vamos a crear dos grupos de columnas, uno asociado a las mediciones (ozono, radiación solar, temperatura, ...) y otro relacionado con la fecha de registro.

``` {r}
# Primero vamos a cambiar a español los nombres de las variables de la base de datos "airquality"
calidad_aire<-airquality |>
  slice(1:10)

names(calidad_aire)<-c("Ozono","R.Solar","Viento","Temp","Mes","Día")

# Creamos la tabla con gt
gt_tbl_air <- 
  gt(calidad_aire) |>
  tab_header(
    title = "Mediciones de la calidad del aire en Nueva York",
    subtitle = "Mediciones diarias en Nueva York de mayo a septiembre de 1973"
  ) |>
  # Aquí creamos el primer grupo de columnas refererentes a la fecha
  tab_spanner(
    label = "Fecha", # Agregamos el título del grupo de columnas
    columns = c(Mes, Día) # Seleccionamos las columnas que se van a agrupar en "Fecha"
  ) |>
  tab_spanner(
    label = "Mediciones",
    columns = c(Ozono, R.Solar, Viento, Temp)
  )

# Visualizamos la tabla
gt_tbl_air
```
